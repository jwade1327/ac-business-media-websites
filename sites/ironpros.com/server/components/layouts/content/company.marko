import { getAsArray, getAsObject, get } from "@parameter1/base-cms-object-path";
import eventLinkAttrs from "@parameter1/base-cms-marko-web-p1-events/utils/link-attrs";
import eventEntity from "@parameter1/base-cms-marko-web-p1-events/utils/base-content-entity";
import queryFragment from "@parameter1/base-cms-marko-web-theme-monorail/graphql/fragments/content-list";
import { buildImgixUrl } from "@parameter1/base-cms-image";
import imageHeight from "@parameter1/base-cms-marko-web/components/node/utils/image-height";

$ const { id, type, pageNode, ...rest } = input;
$ const sections = getAsArray(input, "sections");
$ const { site, pagination: p, i18n, GAM } = out.global;
$ const leadersEnabled = site.get("leaders.enabled");
$ const withAds = false; // (displayOverlay || !GAM) ? false : defaultValue(input.withAds, true);
$ const perPage = 12;
$ const lang = site.config.lang || "en";

$ const displayInquiry = (content) => {
  if (site.get("inquiry.enabled") === false) return false;
  return get(content, "enableRmi");
}

<site-content-wrapper-layout
  id=id
  type=type
  page-node=pageNode
  with-ads=withAds
  load-more=false
  scroll-depth-selector=".document-container .page .content-page-body"
  ...rest
>
  <@section|{ content }|>
    $ const { bannerImagePath } = content;
    $ const inlineStyle = bannerImagePath ? `
      background-image: url(${bannerImagePath});
    ` : '';
    <div class="page-cover-image__wrapper" style=inlineStyle cover-image-path=bannerImagePath>
      <div class="page-cover-image__contents" >
      </div>
    </div>
  </@section>
  <@section|{ aliases, content }| modifiers=["content-header"]>
    $ const { primarySection } = content;
    $ const isTitanium = getAsArray(content, "labels").includes('Titanium');
    $ const headerClass = isTitanium ? "content-page-header content-page-header--titanium" : "content-page-header";
    <div >
      <div class=headerClass>
        <div class="row">
          <div class="col-md-9 col-sm-12 col-lg-10">
            <div class="ldp">
              <div class="ldp__logo">
                <site-company-logo content=content />
              </div>
              <div class="ldp__title">
                <marko-web-content-name tag="h1" class="page-wrapper__title" obj=content />
                <marko-web-content-city-state-zip tag="p" class="text-small text-muted" obj=content />
              </div>
            </div>
          </div>
          <div class="page-wrapper__company-social-info col-md-3 col-lg-2 col-sm-12 d-flex flex-column px-3 py-3">
            <div class="ldp__social">
              <marko-web-leaders-company-website-link company=content lang=lang/>
              <div class="mt-2 d-flex justify-content-around">
                <for|item| of=content.socialLinks>
                  <marko-web-leaders-company-social-link company=content item=item />
                </for>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </@section>
  <@section|{ aliases, content }| modifiers=["content-body"]>
    <div class="row">
      <if(p.page === 1)>
        <div class="col-12">
          <div class="node-list node-list--section-feed node-list--company-categories-feed">
            <div class="node-list__header">
              Company Information
            </div>
          </div>
        </div>
      </if>
      <div class="col-lg-8">
        <if(p.page === 1)>
          <div class="content-page-body">
            <theme-page-contents|{ blockName }| attrs={ "data-gallery-id": id }>
              <marko-web-node-list collapsible=false class="page-details">
                <@body>
                  $ const companyDetailFields = [
                    { key: "yearsInOperation", label: "Years in business", tag: "span", title: "General Information" },
                    { key: "numberOfEmployees", label: "Number of employees", tag: "span" },
                    { key: "body", title: `About ${content.name}` },
                    { key: "salesRegion", tag: "span", title: "Geographic sales distribution" },
                    { key: "salesChannels", title: "Sales Channel", tag: "span" },
                    { key: "warrantyInformation", title: "Warranty/Guarantee", tag: "p" },
                    { key: "serviceInformation", title: "Service, support & spare parts", tag: "p" },
                    { key: "trainingInformation", title: "Training", tag: "p" },
                    { key: "servicesProvided", title: "Other services", tag: "p" },
                  ];
                  $ let showTitle = false;
                  <for|field| of=companyDetailFields>
                    $ const value = get(content, field.key);
                    <if(field.key === "body")>
                      <label class="content-section-header content-section-header--border">${field.title}</label>
                      <marko-web-content-body obj=content />
                    </if>
                    <else-if(value)>
                        <if(field.title)>
                          <label class="content-section-header content-section-header--border">${field.title}</label>
                        </if>
                        <div class="page-details__field">
                          <if(field.label)>
                            <span class="page-details__label">${i18n(field.label)}: </span>
                          </if>
                          <marko-web-obj-text tag=field.tag obj=content field=field.key type="content" html=true />
                        </div>
                    </else-if>
                  </for>
                </@body>
              </marko-web-node-list>

              <marko-web-node-list collapsible=false class="page-company-contacts">
                <@body>
                  <label class="content-section-header content-section-header--border">${i18n("Contact Information")}</label>
                  $ const { socialLinks, website,  ...contentSansSocial } = content;
                  <theme-content-contact-details
                    obj=contentSansSocial
                    website-link-attrs=eventLinkAttrs({
                      category: "Company Profile Page",
                      label: "Company Website",
                      entity: eventEntity(content.id, "company"),
                    })
                    lang=lang
                  />
                </@body>
              </marko-web-node-list>

              $ const inquiry = site.getAsObject('inquiry');
              <if(displayInquiry(content))>
                <!-- only expand when on company content pages IE page 2 or better -->
                <div class="page-company-inquiry">
                  <theme-company-inquiry-form-block
                    modifiers=["flush-x"]
                    content=content
                    consent-checkboxes=getAsArray(site, 'config.inquiry.consentCheckboxes')
                    initially-expanded=false
                  />
                </div>
              </if>

              <site-section-listed-in-block
                title="Categories Listed In"
                schedules=content.websiteSchedules
                root-alias="product-categories"
                full-name-find="Product Categories > "
                full-name-replace=""
              />

              $ const contacts = getAsArray(content, "contacts.edges").map(({ node }) => node);
              $ const contactsLabel = (contacts.length > 1) ? "Key Contacts" : "Key Contact";
              <marko-web-node-list class="page-company-contacts mt-block">
                <@header>
                  <marko-web-browser-component
                    name="ThemeMenuToggleButton"
                    props={
                      className: 'node-list__header',
                      before: contactsLabel,
                      targets: ['.content-page-body .node-list.page-company-contacts'],
                      toggleClass: 'page-company-contacts--open',
                      iconName: 'chevron-down',
                      initiallyExpanded: false,
                      expandedIconName: 'chevron-up',
                    }
                    ssr=true
                  />
                </@header>
                <!-- <@body>
                  <label class="content-section-header content-section-header--border">
                    <if(contacts.length > 1)>
                      ${i18n("Key Contacts")}
                    </if>
                    <else>
                      ${i18n("Key Contact")}
                    </else>
                  </label>
                </@body> -->
                <@nodes|{ nodes }| nodes=contacts>
                  <for|node| of=nodes>
                    <theme-author-card-node node=node with-email=true />
                  </for>
                </@nodes>
              </marko-web-node-list>

              $ const images = getAsArray(content, 'images.edges').map(({ node }) => node);

              $ const inCarouselImages = images.filter(image => image.inCarousel);
              <if(inCarouselImages.length)>
                <marko-web-node-list class="mt-block" collapsible=false modifiers=["photos"]>
                  <@header>
                    Photos
                  </@header>
                  <@body>
                    <site-image-slider images=inCarouselImages />
                  </@body>
                </marko-web-node-list>
              </if>

              <theme-latest-content-list-block
                query-name="all-company-content"
                query-params={ companyId: id, includeContentTypes: ["Document", "Whitepaper"], withSite: false, limit: 5 }
                title=`${i18n("Company Documents")}`
                with-native-x-section=false
                flush-x=false
                class="mt-block"
              >
                <@node with-dates=false />
              </theme-latest-content-list-block>

              $ const videos = getAsArray(content, "videos.edges").map(({ node }) => node);
              <marko-web-node-list class="mt-block node-list--featured-videos">
                <@header>
                  ${i18n("Featured Videos")}
                </@header>
                <@nodes|{ nodes }| nodes=videos>
                  <theme-card-deck-flow cols=3 nodes=nodes modifiers=["featured-videos"]>
                    <@slot|{ node, index }|>
                      <div class="node-list__node">
                        <theme-youtube-card-node
                          node=node
                          company-id=content.id
                          image-position="top"
                          link-attrs={
                            "data-company-id": content.id,
                            "data-company-name": content.name,
                          }
                        />
                      </div>
                    </@slot>
                  </theme-card-deck-flow>
                </@nodes>
                <@footer>
                  $ const url = get(content, "youtube.url");
                  <a href=url target="_blank" rel="noopener" class="btn btn-sm btn-block btn-secondary">
                    ${i18n("View all videos")} &gt;
                  </a>
                </@footer>
              </marko-web-node-list>

              $ const sidebars = getAsArray(content, "sidebars");
              <for|sidebar, index| of=sidebars>
                <marko-web-node-list collapsible=false class=`mt-block node-list--sidebar node-list--sidebar-${index}`>
                <if(sidebar.name)>
                  <@header>
                    ${sidebar.name}
                  </@header>
                </if>
                <@body>
                  $ const obj = { sidebars: [sidebar.body] };
                  <marko-web-content-sidebars block-name=blockName obj=obj />
                </@body>
              </marko-web-node-list>
              </for>

              <${input.afterBody}
                aliases=aliases
                block-name=blockName
                content=content
              />
            </theme-page-contents>
          </div>
        </if>
        <div class="content-page-latest-content">
          $ const latestTitle = (p.page > 1) ? `${i18n("More From")} ${content.name} - Page ${p.page}` : `${i18n("More From")} ${content.name}`;
          <theme-latest-content-list-block
            query-name="all-company-content"
            query-params={
              companyId: id,
              excludeContentTypes: ["Promotion"],
              limit: perPage,
              skip: p.skip({ perPage }),
              withSite: false,
            }
            title=latestTitle
            with-native-x-section=false
            flush-x=false
            class="mt-block"
          >
            <@node with-dates=false with-teaser=true />
          </theme-latest-content-list-block>

          <!-- <theme-content-card-deck-block
            query-name="all-company-content"
            query-params={
              companyId: id,
              excludeContentTypes: ["Promotion"],
              limit: perPage,
              skip: p.skip({ perPage }),
              withSite: false,
            }
            title=latestTitle
            cols=3
          >
            <@node with-dates=false with-section=false />
          </theme-content-card-deck-block> -->

          <theme-section-feed-block|{ totalCount }| query-name="all-company-content" count-only=true>
            <@query-params
              companyId=content.id
              requiresImage=true
              excludeContentTypes=["Promotion"]
            />
            <theme-pagination-controls
              per-page=perPage
              total-count=totalCount
              path=get(content, "siteContext.path")
            />
          </theme-section-feed-block>
        </div>
      </div>

      <div class="col-lg-4 page-rail">
        <!-- $ const topCompany = aliases.includes("top-feed-companies"); -->
        <if(withAds)>
          <theme-gam-define-display-ad
            name="top-rotation"
            position="content_page"
            aliases=aliases
            modifiers=["max-width-300", "center", "margin-auto-x", "rail"]
            class="mb-0"
          />
        </if>
        <if(p.page === 1)>
          <marko-web-node-list collapsible=false class="page-company-contact-info">
            <@body>
              <label class="content-section-header content-section-header--border">${i18n("Contact Information")}</label>
              $ const { socialLinks, website,  ...contentSansSocial } = content;
              <theme-content-contact-details
                obj=contentSansSocial
                website-link-attrs=eventLinkAttrs({
                  category: "Company Profile Page",
                  label: "Company Website",
                  entity: eventEntity(content.id, "company"),
                })
                lang=lang
              />
            </@body>
          </marko-web-node-list>
          <div class="sticky-top">
            $ const inquiry = site.getAsObject('inquiry');
            <if(displayInquiry(content))>
              <!-- only expand when on company content pages IE page 2 or better -->
              <div class="page-company-inquiry">
                <theme-company-inquiry-form-block
                  modifiers=["flush-x"]
                  content=content
                  consent-checkboxes=getAsArray(site, 'config.inquiry.consentCheckboxes')
                  initially-expanded=true
                />
              </div>
            </if>

            <site-section-listed-in-block
              title="Categories Listed In"
              schedules=content.websiteSchedules
              root-alias="product-categories"
              full-name-find="Product Categories > "
              full-name-replace=""
            />

            $ const contacts = getAsArray(content, "contacts.edges").map(({ node }) => node);
            $ const contactsLabel = (contacts.length > 1) ? "Key Contacts" : "Key Contact";
            <marko-web-node-list class="page-company-contacts mt-block">
              <@header>
                <marko-web-browser-component
                  name="ThemeMenuToggleButton"
                  props={
                    className: 'node-list__header',
                    before: contactsLabel,
                    targets: ['.page-rail .node-list.page-company-contacts'],
                    toggleClass: 'page-company-contacts--open',
                    iconName: 'chevron-down',
                    initiallyExpanded: false,
                    expandedIconName: 'chevron-up',
                  }
                  ssr=true
                />
              </@header>
              <!-- <@body>
                <label class="content-section-header content-section-header--border">
                  <if(contacts.length > 1)>
                    ${i18n("Key Contacts")}
                  </if>
                  <else>
                    ${i18n("Key Contact")}
                  </else>
                </label>
              </@body> -->
              <@nodes|{ nodes }| nodes=contacts>
                <for|node| of=nodes>
                  <theme-author-card-node node=node with-email=true />
                </for>
              </@nodes>
            </marko-web-node-list>
          </div>
        </if>

        <if(withAds)>
          <theme-gam-define-display-ad
            name="rotation-rail"
            position="content_page"
            aliases=aliases
            modifiers=["max-width-300", "center", "margin-auto-x", "rail"]
            class="mb-0"
          />
        </if>
      </div>
    </div>
  </@section>
</site-content-wrapper-layout>
